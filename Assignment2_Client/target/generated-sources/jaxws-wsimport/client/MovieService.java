
package client;

import java.util.List;
import javax.activation.DataHandler;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MovieService", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MovieService {


    /**
     * 
     * @param arg0
     * @throws NonexistentEntityException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteMovie", targetNamespace = "http://services/", className = "client.DeleteMovie")
    @ResponseWrapper(localName = "deleteMovieResponse", targetNamespace = "http://services/", className = "client.DeleteMovieResponse")
    @Action(input = "http://services/MovieService/deleteMovieRequest", output = "http://services/MovieService/deleteMovieResponse", fault = {
        @FaultAction(className = NonexistentEntityException_Exception.class, value = "http://services/MovieService/deleteMovie/Fault/NonexistentEntityException")
    })
    public void deleteMovie(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws NonexistentEntityException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "downloadMovie", targetNamespace = "http://services/", className = "client.DownloadMovie")
    @ResponseWrapper(localName = "downloadMovieResponse", targetNamespace = "http://services/", className = "client.DownloadMovieResponse")
    @Action(input = "http://services/MovieService/downloadMovieRequest", output = "http://services/MovieService/downloadMovieResponse")
    public byte[] downloadMovie(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @throws Exception_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "editMovie", targetNamespace = "http://services/", className = "client.EditMovie")
    @ResponseWrapper(localName = "editMovieResponse", targetNamespace = "http://services/", className = "client.EditMovieResponse")
    @Action(input = "http://services/MovieService/editMovieRequest", output = "http://services/MovieService/editMovieResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://services/MovieService/editMovie/Fault/Exception")
    })
    public void editMovie(
        @WebParam(name = "arg0", targetNamespace = "")
        Movie arg0)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns client.Movie
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findMovie", targetNamespace = "http://services/", className = "client.FindMovie")
    @ResponseWrapper(localName = "findMovieResponse", targetNamespace = "http://services/", className = "client.FindMovieResponse")
    @Action(input = "http://services/MovieService/findMovieRequest", output = "http://services/MovieService/findMovieResponse")
    public Movie findMovie(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws Exception_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "uploadMovie", targetNamespace = "http://services/", className = "client.UploadMovie")
    @ResponseWrapper(localName = "uploadMovieResponse", targetNamespace = "http://services/", className = "client.UploadMovieResponse")
    @Action(input = "http://services/MovieService/uploadMovieRequest", output = "http://services/MovieService/uploadMovieResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://services/MovieService/uploadMovie/Fault/Exception")
    })
    public void uploadMovie(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        DataHandler arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2)
        throws Exception_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<client.Movie>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllMovies", targetNamespace = "http://services/", className = "client.GetAllMovies")
    @ResponseWrapper(localName = "getAllMoviesResponse", targetNamespace = "http://services/", className = "client.GetAllMoviesResponse")
    @Action(input = "http://services/MovieService/getAllMoviesRequest", output = "http://services/MovieService/getAllMoviesResponse")
    public List<Movie> getAllMovies();

}
